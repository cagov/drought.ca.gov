/* beginnings of normalize */
*, :after, :before {
  box-sizing: border-box;
  background-color: inherit;
  font-family: inherit;
  color: inherit;
  overflow-wrap: break-word;
  margin: 0;
  padding: 0;
  border: 0 solid;
}

body {
  font-family: $site-font;
  font-size: $body-text;
  line-height: 1.5;
  color: $black;
}

/**
 CA Design System Page layout CSS
*/

/* PAGE CONTAINER */
/* Design system page container */

/* First Block has a top margin */
#main-content {
  margin-top: 32px;
  margin-bottom: 64px;
}

.page-container-ds {
  max-width: $w-lg;
  margin: 2rem auto;
}

.main-content-ds {
  margin-top: 32px;
  max-width: 100%;
}

/* Single column layout */
.single-column {
  max-width: $w-lg;
  margin: 0 auto;
}

/* CONTENT FOOTER */
.content-footer-container {
  border-bottom: 1px solid $gray-200;
  border-top: 1px solid $gray-200;
  padding-top: 23px;
  padding-bottom: 23px;
}

.content-footer {
  max-width: $w-lg !important;
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
}

/* PAGE BEHAVIORS */

/* Hide Mobile title, lives outside flex aligned elements and before content navigation, desktop page title is inside main. */
.narrow-page-title {
  display: none;
}

.main-content-ds.single-column.landing {
  .wide-page-title {
    display: none;
  }
  .narrow-page-title {
    display: none;
  }
}

/* Gutenberg Block alignment */

/* Class applied to most external element of a gutenberg block component. Controls spacing between blocks. */
.cagov-stack {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

/* Apply same spacing mechanism as cagov-stack, but overriding default gutenberg block element classes */
.wp-block-columns {
  margin-top: 2rem;
  margin-bottom: 2rem;
  display: flex;
  flex-wrap: nowrap;
}

.wp-block-column {
  flex-basis: 0;
  flex-grow: 1;
  min-width: 0;
  word-break: break-word;
  overflow-wrap: break-word;
  margin-top: 0px;
  margin-bottom: 0px;
}

.wp-block-column:first-child {
  margin-right: 32px;
}

/* Update position list element */
main ul li {
  list-style-position: outside;
  margin-left: 32px;
}

@media only screen and (max-width: 992px) {
  .with-sidebar .main-content-default,
  .with-sidebar .ds-content-layout {
    display: block;
  }

  article {
    display: block;
  }

  .with-sidebar.page-container-ds #main-content.main-content-ds,
  .with-sidebar.page-container-ds #main-content.main-content-ds main {
    margin-top: 0;
    margin-left: 0;
  }

  .with-sidebar.page-container-ds main {
    margin-left: inherit;
    margin-top: 32px;
  }

  /* Responsive page title */
  .wide-page-title {
    display: none;
  }

  .narrow-page-title {
    display: block;
    margin-bottom: 16px;
    margin-top: 16px;
  }

  .main-content-ds.single-column {
    .wide-page-title {
      display: none;
    }
  }


  main .wp-block-image img {
    width:100%;
    height: auto;
    object-fit: cover;
    object-position: bottom;
    margin-bottom: 32px;
  }

  .main-content-ds.single-column.landing {
    .wide-page-title {
      display: none;
    }
    .narrow-page-title {
      display: none;
    }
  }


  /* Content Menu */
  .content-footer {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
  }

  .wp-block-columns {
    margin-top: 2rem;
    margin-bottom: 2rem;
    display: flex;
    flex-wrap: nowrap;
    flex-direction: column;
  }
  
  .wp-block-column {
    flex-basis: 0;
    flex-grow: 1;
    min-width: 0;
    word-break: break-word;
    overflow-wrap: break-word;
    margin-top: 0px;
    margin-bottom: 0px;
  }
  
}

/* border styles */
.wp-block-table {
  background: none !important;
  border: none !important;
}
.wp-block-table table,
.wp-block-table table th,
.wp-block-table table td {
  border: 1px solid $gray-200 !important;
}


/* SIDEBAR */
/* Based on EveryLayout sidebar: https://every-layout.dev/layouts/sidebar/. 
 Intention: We are keeping a clean and clear page-container so that we can do more css for design prototypes without requiring full integration with Wordpress Theme until user testing and research has concluding and layouts and templates are finalized.
 We are interested to use more of these kinds of layouts. 
 Talk to Koji for more information.
 See also: https://shop.smashingmagazine.com/products/inclusive-design-patterns

 Integration with CAWeb theme. For any main page elements that need to also render in the default template, the suffix is -default for layouts in the main theme, and -ds for layouts that are tied to templates provided by the design system WP code.
*/

.sidebar-container {
  display: block;
  width: 276px;
  max-width: 276px;
}

.with-sidebar .main-content-default,
.with-sidebar .ds-content-layout {
  display: flex;
  flex-wrap: wrap;
  margin: calc(var(--s1) / 2 * -1);
}

.with-sidebar.has-sidebar-left .main-content-default > *,
.with-sidebar.has-sidebar-left .main-content-ds .ds-content-layout > .everylayout {
  margin: calc(var(--s1) / 2);
  flex-basis: 267px;
  flex-grow: 1;
}

.with-sidebar.has-sidebar-left .main-content-default > :last-child,
.with-sidebar.has-sidebar-left .main-content-ds .ds-content-layout > .everylayout:last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: calc(50% - var(--s1));
}

.with-sidebar.has-sidebar-right .main-content-default,
.with-sidebar.has-sidebar-right .main-content-ds .ds-content-layout > .everylayout {
  flex-basis: 0;
  flex-grow: 999;
  min-width: calc(50% - var(--s1));
}

.with-sidebar.has-sidebar-right .main-content-default > * > :last-child,
.with-sidebar.has-sidebar-right .main-content-ds .ds-content-layout > :last-child {
  margin: calc(var(--s1) / 2);
  flex-basis: 267px;
  flex-grow: 1;
}

.with-sidebar.page-container-ds.has-sidebar-left main {
  margin-left: 64px;
  margin-right: 20px;
}

.with-sidebar.page-container-ds.has-sidebar-right main {
  margin-right: 64px;
  margin-left: 20px;
}

.with-sidebar .main-container-ds {
  max-width: 877px;
}